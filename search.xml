<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/2020/05/06/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>文件上传Oss--前、后端结合(基于Springboot)</title>
    <url>/2020/05/06/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Oss-%E5%89%8D%E3%80%81%E5%90%8E%E7%AB%AF%E7%BB%93%E5%90%88-%E5%9F%BA%E4%BA%8ESpringboot/</url>
    <content><![CDATA[<p>所需依赖</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- https:&#x2F;&#x2F;mvnrepository.com&#x2F;artifact&#x2F;com.aliyun.oss&#x2F;aliyun-sdk-oss --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;com.aliyun.oss&lt;&#x2F;groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;aliyun-sdk-oss&lt;&#x2F;artifactId&gt;</span><br><span class="line">            &lt;version&gt;3.9.1&lt;&#x2F;version&gt;</span><br><span class="line">        &lt;&#x2F;dependency&gt;</span><br></pre></td></tr></table></figure>

<p><code>AliOssUtil</code>工具类</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.soft1851.music.admin.util;</span><br><span class="line"></span><br><span class="line">import com.aliyun.oss.OSS;</span><br><span class="line">import com.aliyun.oss.OSSClientBuilder;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.UUID;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author wl_sun</span><br><span class="line"> * @description TODO</span><br><span class="line"> * @Data 2020&#x2F;5&#x2F;1</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Slf4j</span><br><span class="line">public class AliOssUtil &#123;</span><br><span class="line">    public static String upload(MultipartFile sourceFile)&#123;</span><br><span class="line">        &#x2F;&#x2F; 获取文件名</span><br><span class="line">        String fileName &#x3D; sourceFile.getOriginalFilename();</span><br><span class="line">        &#x2F;&#x2F;uuid生成主文件名</span><br><span class="line">        String prefix &#x3D; UUID.randomUUID().toString();</span><br><span class="line">        assert fileName !&#x3D; null;</span><br><span class="line">        &#x2F;&#x2F;源文件的扩展名</span><br><span class="line">        String suffix &#x3D; fileName.substring(fileName.lastIndexOf(&quot;.&quot;));</span><br><span class="line">        &#x2F;&#x2F;创建File类型的临时文件</span><br><span class="line">        File tempFile &#x3D; null;</span><br><span class="line">        try &#123;</span><br><span class="line">            tempFile &#x3D; File.createTempFile(prefix,suffix);</span><br><span class="line">            &#x2F;&#x2F;将MultipartFile转换成File</span><br><span class="line">            sourceFile.transferTo(tempFile);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            log.error(e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        assert tempFile !&#x3D; null;</span><br><span class="line">        return upload(tempFile);</span><br><span class="line">    &#125;</span><br><span class="line">    public static String upload(File file)&#123;</span><br><span class="line">        String endpoint &#x3D; &quot;https:&#x2F;&#x2F;oss-cn-beijing.aliyuncs.com&quot;;</span><br><span class="line">        String accessKeyId &#x3D; &quot;LT************z6jbo4&quot;;</span><br><span class="line">        String accessKeySecret &#x3D; &quot;6vVUW*********KwVZMjkv&quot;;</span><br><span class="line">        String bucketName &#x3D; &quot;bucket名&quot;;</span><br><span class="line">        String filePath &#x3D; &quot;存储路径，默认根目录&quot;;</span><br><span class="line">        String fileName &#x3D; file.getName();</span><br><span class="line">        String newFileName &#x3D; UUID.randomUUID().toString() + fileName.substring(fileName.indexOf(&quot;.&quot;));</span><br><span class="line">        &#x2F;&#x2F;创建OSSClient实例</span><br><span class="line">&#x2F;&#x2F;        OSSClient ossClient  &#x3D; new OSSClient(endpoint,accessKeyId,accessKeySecret);</span><br><span class="line">        OSS ossClient  &#x3D; new OSSClientBuilder().build(endpoint,accessKeyId,accessKeySecret);</span><br><span class="line">        &#x2F;&#x2F;上传文件到指定位置，并使用UUID更名</span><br><span class="line">        ossClient.putObject(bucketName,filePath + newFileName,file);</span><br><span class="line">        &#x2F;&#x2F;拼接URL</span><br><span class="line">        String url &#x3D; &quot;https:&#x2F;&#x2F;bucket名.oss-cn-beijing.aliyuncs.com&#x2F;&quot; + filePath + newFileName;</span><br><span class="line">        ossClient.shutdown();</span><br><span class="line">        return url;</span><br><span class="line">    &#125;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        File file &#x3D; new File(&quot;C:\\Users\\HP\\Desktop\\en\\Python库大全.pdf&quot;);</span><br><span class="line">        upload(file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>controller类接口编写</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.soft1851.music.admin.controller;</span><br><span class="line"></span><br><span class="line">import com.soft1851.music.admin.annotation.ControllerWebLog;</span><br><span class="line">import com.soft1851.music.admin.common.ResponseResult;</span><br><span class="line">import com.soft1851.music.admin.util.AliOssUtil;</span><br><span class="line">import lombok.extern.slf4j.Slf4j;</span><br><span class="line">import org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line">import org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line">import org.springframework.web.bind.annotation.RestController;</span><br><span class="line">import org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @author wl_sun</span><br><span class="line"> * @description TODO</span><br><span class="line"> * @Data 2020&#x2F;5&#x2F;1</span><br><span class="line"> *&#x2F;</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;&#x2F;api&quot;)</span><br><span class="line">@Slf4j</span><br><span class="line">public class UploadController &#123;</span><br><span class="line"></span><br><span class="line">    @PostMapping(&quot;&#x2F;uploadFile&quot;)</span><br><span class="line">    @ControllerWebLog</span><br><span class="line">    public ResponseResult uploadSingle(@RequestParam(&quot;file&quot;) MultipartFile sourceFile) &#123;</span><br><span class="line">        String url &#x3D; AliOssUtil.upload(sourceFile);</span><br><span class="line">        return ResponseResult.success(url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>前端调用接口实现(以上传图片为例)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;file&quot; @change&#x3D;&quot;uploadImage($event)&quot;  id&#x3D;&quot;fileBox&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">uploadImage() &#123;</span><br><span class="line">      let formData &#x3D; new FormData()</span><br><span class="line">      formData.append(&#39;file&#39;, event.target.files[0])</span><br><span class="line">      this.axios(&#123;</span><br><span class="line">        method: &#39;post&#39;,</span><br><span class="line">        url: this.GLOBAL.baseUrl + &#39;&#x2F;api&#x2F;uploadFile&#39;,</span><br><span class="line">        headers: &#123;</span><br><span class="line">          &#39;Content-Type&#39;: &#39;multipart&#x2F;formdata&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        data: formData</span><br><span class="line">      &#125;).then((res) &#x3D;&gt; &#123;</span><br><span class="line">        console.log(res.data.data)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>文件上传`Oss`——纯前端（1）</title>
    <url>/2020/05/06/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Oss%E2%80%94%E2%80%94%E7%BA%AF%E5%89%8D%E7%AB%AF%EF%BC%881%EF%BC%89/</url>
    <content><![CDATA[<p>参考阿里云官方文档进行简单上传</p>
<p>安装方法：<code>npm install aliyun-oss</code></p>
<h4 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h4><p>创建实例：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">getClient() &#123;</span><br><span class="line">      let OSS &#x3D; require(&#39;ali-oss&#39;)</span><br><span class="line">      this.client &#x3D; new OSS(&#123;</span><br><span class="line">        region: &#39;oss-cn-beijing&#39;,</span><br><span class="line">        accessKeyId: &#39;LTAI*********jbo4&#39;,</span><br><span class="line">        accessKeySecret: &#39;6v*********ZMjkv&#39;,</span><br><span class="line">        bucket: &#39;bucket名&#39;,</span><br><span class="line">        path: &#39;存储路径，默认根目录&#39;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>

<ul>
<li><code>region</code>:查看方式：打开你的<code>oss</code>对象存储—&gt;Bucket列表—&gt;若未创建先创建一个—&gt;创建好后打开(如图，红色框中的就是region)</li>
</ul>
<p><img src="https://swl-kuzma.oss-cn-beijing.aliyuncs.com/markdown/20200505233409.png" alt=""></p>
<ul>
<li><code>accessKeyId</code>和<code>accessKeySecret</code>:查看方式：点击右上角头像—&gt;点击<code>AccessKey</code>管理—&gt;若没有还是先创建，查看<code>accessKeySecret</code>可能需要接收手机验证码获取</li>
</ul>
<h4 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h4><p>获取文件(这边我以上传图片为例)，并上传</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;input type&#x3D;&quot;file&quot; @change&#x3D;&quot;uploadImage($event)&quot;  id&#x3D;&quot;fileBox&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line"> uploadImage() &#123;</span><br><span class="line">      this.getClient()</span><br><span class="line">      this.file &#x3D; event.target.files[0]</span><br><span class="line">      var _this &#x3D; this</span><br><span class="line">      async function put() &#123;</span><br><span class="line">        try &#123;</span><br><span class="line">          let result &#x3D; await _this.client.put(event.target.files[0].name, _this.file)</span><br><span class="line">          _this.inageSrc &#x3D; result.url &#x2F;&#x2F;这个result.url就是上传后的图片链接</span><br><span class="line">        &#125; catch (e) &#123;</span><br><span class="line">          console.log(e)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      put() &#x2F;&#x2F;不可去掉</span><br><span class="line">    &#125;,</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>文件上传Oss--纯前端（2）</title>
    <url>/2020/05/06/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0Oss%E2%80%94%E2%80%94%E7%BA%AF%E5%89%8D%E7%AB%AF%EF%BC%882%EF%BC%89/</url>
    <content><![CDATA[<p>采用分片式上传，封装成<code>oss.js</code>工具类，方便调用</p>
<p><code>oss.js</code>工具类</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import OSS from &#39;ali-oss&#39;</span><br><span class="line">const region &#x3D; &#39;oss-cn-beijing&#39;</span><br><span class="line">const accessKeyId &#x3D; &#39;LT********o4&#39;</span><br><span class="line">const accessKeySecret &#x3D; &#39;6vVU******************Mjkv&#39;</span><br><span class="line">const bucket &#x3D; &#39;bucket名&#39;</span><br><span class="line">    const path &#x3D; &#39;存储路径，默认根目录&#39;</span><br><span class="line">let client &#x3D; new OSS(&#123;</span><br><span class="line">  region: region,</span><br><span class="line">  accessKeyId: accessKeyId,</span><br><span class="line">  accessKeySecret: accessKeySecret,</span><br><span class="line">  bucket: bucket,</span><br><span class="line">  path: path</span><br><span class="line">&#125;)</span><br><span class="line">&#x2F;&#x2F;  上传</span><br><span class="line">const CooOss &#x3D; function(file) &#123;</span><br><span class="line">  if (this instanceof CooOss) &#123;</span><br><span class="line">    let objectKey &#x3D; file.lastModified + &#39;_&#39; + file.name</span><br><span class="line">    return new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">      client</span><br><span class="line">        .multipartUpload(objectKey, file)</span><br><span class="line">        .then((result) &#x3D;&gt; &#123;</span><br><span class="line">          console.log(result)</span><br><span class="line">          resolve(&#123;</span><br><span class="line">            code: 0,</span><br><span class="line">            objectKey: objectKey,</span><br><span class="line">            url: this.getOssFileUrl(objectKey),</span><br><span class="line">            msg: &#39;ok&#39;</span><br><span class="line">          &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch((err) &#x3D;&gt; &#123;</span><br><span class="line">          console(err)</span><br><span class="line">          console.error(&#39;上传出错了&#39;)</span><br><span class="line">          reject(&#123; code: -1, url: &#39;&#39;, objectKey: &#39;&#39;, msg: &#39;上传出错了&#39; &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    return new CooOss(file)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;**</span><br><span class="line"> *</span><br><span class="line"> * @param &#123;上传是设置文件key 一般是文件名&#125; obecjtKey</span><br><span class="line"> *&#x2F;</span><br><span class="line">CooOss.prototype.getOssFileUrl &#x3D; (obecjtKey) &#x3D;&gt; &#123;</span><br><span class="line">  if (!obecjtKey) return new Error(&#39;object key 必须传&#39;)</span><br><span class="line">  return &#39;https:&#x2F;&#x2F;&#39; + bucket + &#39;.&#39; + region + &#39;.aliyuncs.com&#x2F;&#39; + obecjtKey</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  install(Vue) &#123;</span><br><span class="line">    Vue.prototype.Oss &#x3D; &#123;</span><br><span class="line">      uploadFile: CooOss,</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><code>mian.js</code>调用</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import Oss from &#39;.&#x2F;utils&#x2F;oss&#39;</span><br><span class="line">Vue.use(Oss)</span><br></pre></td></tr></table></figure>

<p>页面调用(支持多选)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;v-file-input chip show-size counter multiple accept&#x3D;&quot;image&#x2F;*&quot; label&#x3D;&quot;File input&quot; :value&#x3D;&quot;files&quot; v-model&#x3D;&quot;files&quot;&gt;&lt;&#x2F;v-file-input&gt;</span><br><span class="line">&lt;v-btn small style&#x3D;&quot;margin-left: 16px&quot; @click&#x3D;&quot;uploadFile(files)&quot;&gt;上传&lt;&#x2F;v-btn&gt;</span><br><span class="line"></span><br><span class="line"> uploadFile(files) &#123;</span><br><span class="line">     for (let index &#x3D; 0; index &lt; files.length; index++) &#123;</span><br><span class="line">       const f &#x3D; files[index]</span><br><span class="line">       this.Oss.uploadFile(f).then((res) &#x3D;&gt; &#123;</span><br><span class="line">         console.log(res)</span><br><span class="line">       &#125;)</span><br><span class="line">     &#125;</span><br><span class="line">     this.files &#x3D; []</span><br><span class="line">     alert(&#39;上传成功&#39;)</span><br><span class="line">   &#125;,</span><br></pre></td></tr></table></figure>





]]></content>
  </entry>
</search>
